<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 在spring中使用annotation来注册bean -->
	<context:component-scan base-package="com.basic">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<context:component-scan base-package="com.basic.service" />
	<!-- <import resource="ApplicationContext-service.xml" /> -->


	<!-- 配置连接池 -->
	<context:property-placeholder location="classpath:config/spring/jdbc.properties" />


    <bean name="gzz" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="url" value="${gzz_driverUrl}"/>
        <property name="username" value="${gzz_username}"/>
        <property name="password" value="${gzz_password}"/>
    </bean>



	<bean id="dataSource" class="com.basic.datasource.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
                <entry key="gzz" value-ref="gzz"/>
			</map>
		</property>
        <property name="defaultTargetDataSource" ref="gzz"/>
	</bean>



	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="typeAliasesPackage" value="com.basic.model;com.basic.utils"/>
		<property name="mapperLocations" value="classpath:config/mybatis/*Mapper.xml"/>

    </bean>


	<!-- 扫描 basePackage下所有的接口，根据对应的mapper.xml为其生成代理类 -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.basic.mapper" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->

	<!-- 事务管理 属性 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:advisor advice-ref="transactionAdvice"
                     pointcut="execution(* com.basic..service.*.*(..))" order="2" />
		<aop:aspect ref="dataSourceAspect" order="1">
			<aop:before method="changeDateSource"
				pointcut="@annotation(com.basic.annotation.DataSource)" />
		</aop:aspect>
	</aop:config>

</beans>				